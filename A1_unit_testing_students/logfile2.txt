C:\Users\HP\PycharmProjects\pythonProject11\.venv\Scripts\python.exe "C:/Users/HP/AppData/Local/Programs/PyCharm Community/plugins/python-ce/helpers/pycharm/_jb_pytest_runner.py" --path C:\Users\HP\PycharmProjects\pythonProject11\1DL610-HT23-coding-assignments-students\A1_unit_testing_students\test_checkout_and_payment.py 
Testing started at 11:39 PM ...
Launching pytest with arguments C:\Users\HP\PycharmProjects\pythonProject11\1DL610-HT23-coding-assignments-students\A1_unit_testing_students\test_checkout_and_payment.py --no-header --no-summary -q in C:\Users\HP\PycharmProjects\pythonProject11\1DL610-HT23-coding-assignments-students\A1_unit_testing_students

============================= test session starts =============================
collecting ... collected 8 items

test_checkout_and_payment.py::test_add_item FAILED                       [ 12%]
test_checkout_and_payment.py:73 (test_add_item)
stub_logout = <MagicMock name='logout' id='2294506829584'>
capsys = <_pytest.capture.CaptureFixture object at 0x000002163B45F7D0>
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x000002163B470DD0>

    def test_add_item(stub_logout, capsys, monkeypatch):
        login_details = {"username": "Simba", "wallet": 100}
        cart = ShoppingCart()
        products = [Product("Backpack", 15, 1)]
        monkeypatch.setattr("checkout_and_payment.products", products)
        monkeypatch.setattr("checkout_and_payment.cart", cart)
        monkeypatch.setattr("builtins.input", fake_input(["1", "l", "y"]))
>       checkoutAndPayment(login_details)

test_checkout_and_payment.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

login_info = {'username': 'Simba', 'wallet': 100}

    def checkoutAndPayment(login_info):
        # Create/retrieve a user using login information
>       user = User(login_info["username"], login_info["wallet"],login_info["cards"])
E       KeyError: 'cards'

checkout_and_payment.py:136: KeyError

test_checkout_and_payment.py::test_out_of_stock FAILED                   [ 25%]
test_checkout_and_payment.py:88 (test_out_of_stock)
stub_logout = <MagicMock name='logout' id='2294506968720'>
capsys = <_pytest.capture.CaptureFixture object at 0x00000216399D6E90>
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x000002163B4AAC90>

    def test_out_of_stock(stub_logout, capsys, monkeypatch):
        login_details = {"username": "Simba", "wallet": 100}
        cart = ShoppingCart()
        products = [Product("Backpack", 15, 0)]
        monkeypatch.setattr("checkout_and_payment.products", products)
        monkeypatch.setattr("checkout_and_payment.cart", cart)
        monkeypatch.setattr("builtins.input", fake_input(["1", "l", "y"]))
>       checkoutAndPayment(login_details)

test_checkout_and_payment.py:96: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

login_info = {'username': 'Simba', 'wallet': 100}

    def checkoutAndPayment(login_info):
        # Create/retrieve a user using login information
>       user = User(login_info["username"], login_info["wallet"],login_info["cards"])
E       KeyError: 'cards'

checkout_and_payment.py:136: KeyError

test_checkout_and_payment.py::test_one_product FAILED                    [ 37%]
test_checkout_and_payment.py:102 (test_one_product)
stub_logout = <MagicMock name='logout' id='2294507708176'>
capsys = <_pytest.capture.CaptureFixture object at 0x000002163B510C50>
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x000002163B512250>

    def test_one_product(stub_logout, capsys, monkeypatch):
        login_details = {"username": "Simba", "wallet": 100}
        products = [Product("Ice cream", 15, 1)]
        monkeypatch.setattr("checkout_and_payment.products", products)
        monkeypatch.setattr("builtins.input", fake_input(["l"]))
>       checkoutAndPayment(login_details)

test_checkout_and_payment.py:108: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

login_info = {'username': 'Simba', 'wallet': 100}

    def checkoutAndPayment(login_info):
        # Create/retrieve a user using login information
>       user = User(login_info["username"], login_info["wallet"],login_info["cards"])
E       KeyError: 'cards'

checkout_and_payment.py:136: KeyError

test_checkout_and_payment.py::test_several_products FAILED               [ 50%]
test_checkout_and_payment.py:114 (test_several_products)
stub_logout = <MagicMock name='logout' id='2294507713616'>
capsys = <_pytest.capture.CaptureFixture object at 0x000002163B4A8F10>
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x000002163B531450>

    def test_several_products(stub_logout, capsys, monkeypatch):
        login_details = {"username": "Simba", "wallet": 100}
        products = [Product("Backpack", 15, 1), Product("Banana", 15, 5), Product("Pens", 0.5, 10)]
        monkeypatch.setattr("checkout_and_payment.products", products)
        monkeypatch.setattr("builtins.input", fake_input(["l"]))
>       checkoutAndPayment(login_details)

test_checkout_and_payment.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

login_info = {'username': 'Simba', 'wallet': 100}

    def checkoutAndPayment(login_info):
        # Create/retrieve a user using login information
>       user = User(login_info["username"], login_info["wallet"],login_info["cards"])
E       KeyError: 'cards'

checkout_and_payment.py:136: KeyError

test_checkout_and_payment.py::test_other_letter FAILED                   [ 62%]
test_checkout_and_payment.py:126 (test_other_letter)
stub_logout = <MagicMock name='logout' id='2294507059920'>
capsys = <_pytest.capture.CaptureFixture object at 0x0000021638FCB710>
monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x000002163B4E4D10>

    def test_other_letter(stub_logout, capsys, monkeypatch):
        login_details = {"username": "Simba", "wallet": 100}
        monkeypatch.setattr("checkout_and_payment.products", [])
        monkeypatch.setattr("builtins.input", fake_input(["a", "l"]))
>       checkoutAndPayment(login_details)

test_checkout_and_payment.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

login_info = {'username': 'Simba', 'wallet': 100}

    def checkoutAndPayment(login_info):
        # Create/retrieve a user using login information
>       user = User(login_info["username"], login_info["wallet"],login_info["cards"])
E       KeyError: 'cards'

checkout_and_payment.py:136: KeyError

test_checkout_and_payment.py::test_PaybyCard PASSED                      [ 75%]
test_checkout_and_payment.py::test_MultipleCardpayment PASSED            [ 87%]
test_checkout_and_payment.py::test_mixedPayments PASSED                  [100%]

========================= 5 failed, 3 passed in 0.21s =========================

Process finished with exit code 1
